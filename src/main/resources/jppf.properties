#------------------------------------------------------------------------------#
# JPPF.                                                                        #
# Copyright (C) 2005-2014 JPPF Team.                                           #
# http://www.jppf.org                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#    http://www.apache.org/licenses/LICENSE-2.0                                #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
#------------------------------------------------------------------------------#
#------------------------------------------------------------------------------#
# Space-separated list of named drivers this client may connect to.            #
# If auto discovery of the server is enabled, this needs not be specified.     #
#------------------------------------------------------------------------------#
jppf.drivers=driver1
# jppf.drivers = driver1 driver2
#------------------------------------------------------------------------------#
# Manual configuration of the connection to a JPPF driver                      #
# These settings only apply if jppf.discovery.enabled = false                  #
#------------------------------------------------------------------------------#
# Host name, or ip address, of the host the JPPF driver is running on
# If auto discovery of the server is enabled, this needs not be specified.
driver1.jppf.server.host=localhost
# port number the server is listening to for connections. Defaults to 11111
driver1.jppf.server.port=11111
# JMX management port of the driver. Defaults to 11198
driver1.jppf.management.port=11198
# Priority given to the driver connection. For this property to be activated,
# the application code must use the ClientWithFailover class.
# See: http://www.jppf.org/doc/v4/index.php?title=The_ClientWithFailover_wrapper_class
# When this is used, the client is always connected to the available driver connection(s)
# with the highest priority. If multiple drivers have the same priority, they will be
# used as a pool and jobs will be evenly distributed among them. The default value is 0
driver1.jppf.priority=10
# Size of the connection pool associated with a driver definition. The JPPF client
# will create the specified number of connections to the driver, allowing to send
# multiple jobs concurrently to the same driver, or each job over  multiple connections
# in parallel, or any combination of the two, depending on the load balancing settings.
# The default value is 1
#driver1.jppf.pool.size = 10
#------------------------------------------------------------------------------#
# Manual configuration of the connection to a second JPPF driver               #
# These settings only apply if jppf.discovery.enabled = false                  #
#------------------------------------------------------------------------------#
#driver2.jppf.server.host = localhost
#driver2.jppf.server.port = 11121
#driver2.jppf.management.port = 11199
#driver2.jppf.priority = 5
#driver2.jppf.pool.size = 2
#------------------------------------------------------------------------------#
# Management configuration                                                     #
#------------------------------------------------------------------------------#
# Enable or disable management features in the client. Defaults to true (enabled)
#jppf.management.enabled = false
#------------------------------------------------------------------------------#
# SSL Settings                                                                 #
#------------------------------------------------------------------------------#
# enable SSL. Default is false (disabled).
# if enabled, only SSL connections are established
#jppf.ssl.enabled = true
# location of the SSL configuration on the file system or in the classpath
jppf.ssl.configuration.file=config/ssl/ssl.properties
# SSL configuration as an arbitrary source. Value is the fully qualified name
# of an implementation of Callable<InputStream> with optional arguments
#jppf.ssl.configuration.source = org.jppf.ssl.FileStoreSource config/ssl/ssl.properties
#------------------------------------------------------------------------------#
# Automatic recovery of driver connections. This parameters determine how the  #
# JPPF client reacts when a connection to a driver is lost                     #
#------------------------------------------------------------------------------#
# number of seconds before the first reconnection attempt. Default to 1
#jppf.reconnect.initial.delay = 1
# time in seconds after which the system stops trying to reconnect
# A value of zero or less means the system never stops trying. Default to 60
jppf.reconnect.max.time=-1
# time between two connection attempts, in seconds. Default to 1
#jppf.reconnect.interval = 1
#------------------------------------------------------------------------------#
# Local executor settings. The local executor, when enabled, processes jobs in #
# the same JVM as the JPPF client, using the exact same APIs as a for remote   #
# connections.                                                                 #
#------------------------------------------------------------------------------#
# Enable local execution of jobs? Default value is false (disabled)
#jppf.local.execution.enabled = true
# Number of threads to use for loacal execution. Defaults to the number of CPUs available to the JVM
#jppf.local.execution.threads = 4
# priority assigned to the local executor; defaults to 0
# this is equivalent to "<driver_name>.jppf.priority" in manual network configuration
#jppf.local.execution.priority = 10
# Enable rmeote execution of jobs? Default value is true (enabled)
# when disabled, jobs will not be submitted to any remote server
#jppf.remote.execution.enabled = true
#------------------------------------------------------------------------------#
# Configuration of automatic discovery of JPPF drivers.                        #
#------------------------------------------------------------------------------#
# Enable or disable discovery of JPPF drivers. Defaults to true (enabled)
jppf.discovery.enabled=false
# UDP multicast group to which drivers broadcast their connection parameters
# and to which clients and nodes listen. Defaults to 230.0.0.1
#jppf.discovery.group = 230.0.0.1
# UDP multicast port to which drivers broadcast their connection parameters. Defaults to 11111
#jppf.discovery.port = 11111
# Size of the connection pool for each discovered driver. Default value is 1
#jppf.pool.size = 1
# priority assigned to all auto-discovered connections; defaults to 0
# this is equivalent to "<driver_name>.jppf.priority" in manual network configuration
#jppf.discovery.priority = 10
# IPv4 address patterns included in the server discovery mechanism
# Drivers whose IPv4 address matches the pattern will be included
# in the list of discovered drivers.
#jppf.discovery.include.ipv4 = 192.168.1.
# IPv4 address patterns excluded from the server discovery mechanism
# Drivers whose IPv4 address matches the pattern will be excluded
# from the list of discovered drivers.
#jppf.discovery.exclude.ipv4 = 192.168.1.-9; 192.168.1.100-
# IPv6 address patterns included in the server discovery mechanism
#jppf.discovery.include.ipv6 = 1080:0:0:0:8:800:200C-20FF:-
# IPv6 address patterns excluded from the server discovery mechanism
#jppf.discovery.exclude.ipv6 = 1080:0:0:0:8:800:200C-20FF:0C00-0EFF
#------------------------------------------------------------------------------#
# Specify alternate serialization schemes.                                     #
# Defaults to org.jppf.serialization.DefaultJavaSerialization.                 #
#------------------------------------------------------------------------------#
# The default: standard Java serialization
#jppf.object.serialization.class = org.jppf.serialization.DefaultJavaSerialization
# built-in JPPF serialization, enables serialization of objects whose class does not implement java.io.Serializable
#jppf.object.serialization.class = org.jppf.serialization.DefaultJPPFSerialization
# XStream serialization
#jppf.object.serialization.class = org.jppf.serialization.XstreamSerialization
# Kryo serialization, defined in the "Kryo Serialization" sample
#jppf.object.serialization.class = org.jppf.serialization.kryo.KryoSerialization
#------------------------------------------------------------------------------#
# Specify a data transformation class.                                         #
# If left unspecified, no transformation is used.                              #
#------------------------------------------------------------------------------#
# Defined in the "Network Data Encryption" sample
#jppf.data.transform.class = org.jppf.example.dataencryption.SecureKeyCipherTransform
#------------------------------------------------------------------------------#
# Load-balancing configuration. The load-balancing determines how the tasks in #
# the jobs are distributed over the available driver connections, including    #
# the connection to the local executor (if  enabled).                          #
# If no load-balancing is configured, the JPPF client will default to the      #
# "manual" algorithm with a fixed size of 1,000,000                            # 
#------------------------------------------------------------------------------#
# Name of the load-balancing algorithm to use. Pre-defined possible values are:
# manual | autotuned | proportional | rl | nodethreads
# It can also be the name of a user-defined algorithm. Defaults to "manual"
jppf.load.balancing.algorithm=manual
# name of the set of parameter values (aka profile) to use with the algorithm
jppf.load.balancing.profile=manual_profile
# "manual" profile
jppf.load.balancing.profile.manual_profile.size=1000000
# "autotuned" profile
jppf.load.balancing.profile.autotuned_profile.size=5
jppf.load.balancing.profile.autotuned_profile.minSamplesToAnalyse=100
jppf.load.balancing.profile.autotuned_profile.minSamplesToCheckConvergence=50
jppf.load.balancing.profile.autotuned_profile.maxDeviation=0.2
jppf.load.balancing.profile.autotuned_profile.maxGuessToStable=50
jppf.load.balancing.profile.autotuned_profile.sizeRatioDeviation=1.5
jppf.load.balancing.profile.autotuned_profile.decreaseRatio=0.2
# "proportional" profile
jppf.load.balancing.profile.proportional_profile.size=5
jppf.load.balancing.profile.proportional_profile.initialMeanTime=1e10
jppf.load.balancing.profile.proportional_profile.performanceCacheSize=300
jppf.load.balancing.profile.proportional_profile.proportionalityFactor=1
# "rl" profile
jppf.load.balancing.profile.rl_profile.performanceCacheSize=1000
jppf.load.balancing.profile.rl_profile.performanceVariationThreshold=0.001
jppf.load.balancing.profile.rl_profile.maxActionRange=10
# "nodethreads" profile
jppf.load.balancing.profile.nodethreads_profile.multiplicator=1

